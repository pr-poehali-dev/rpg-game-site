import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import Icon from '@/components/ui/icon';

const World = () => {
  const locations = [
    {
      id: 1,
      name: '–ö—Ä–µ–ø–æ—Å—Ç—å –®—Ç–æ—Ä–º–æ–≤',
      type: '–ì–æ—Ä–æ–¥',
      level: '1-20',
      description: '–í–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å –Ω–∞ —Å–∫–∞–ª–∏—Å—Ç–æ–º –ø–æ–±–µ—Ä–µ–∂—å–µ, –≥–¥–µ –≤–æ–∏–Ω—ã –æ—Ç—Ç–∞—á–∏–≤–∞—é—Ç —Å–≤–æ—ë –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ',
      features: ['–ê—Ä–µ–Ω–∞ —Å—Ä–∞–∂–µ–Ω–∏–π', '–®–∫–æ–ª–∞ –≤–æ–∏–Ω–æ–≤', '–¢–æ—Ä–≥–æ–≤—ã–µ —Ä—è–¥—ã', '–ü–æ—Ä—Ç'],
      danger: '–ù–∏–∑–∫–∞—è',
      population: '15,000'
    },
    {
      id: 2,
      name: '–ë–∞—à–Ω—è –ú–∞–≥–æ–≤',
      type: '–°–≤—è—Ç–∏–ª–∏—â–µ',
      level: '25-45',
      description: '–ü–∞—Ä—è—â–∞—è –≤ –æ–±–ª–∞–∫–∞—Ö –±–∞—à–Ω—è, –≥–¥–µ –∏–∑—É—á–∞—é—Ç —Ç–∞–π–Ω—ã –¥—Ä–µ–≤–Ω–µ–π –º–∞–≥–∏–∏',
      features: ['–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π', '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –∞–ª—Ö–∏–º–∏–∏', '–ê—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–∞—è –æ–±—Å–µ—Ä–≤–∞—Ç–æ—Ä–∏—è'],
      danger: '–°—Ä–µ–¥–Ω—è—è',
      population: '2,500'
    },
    {
      id: 3,
      name: '–ü–æ–¥–∑–µ–º–µ–ª—å—è –ì–æ—Ä–æ–¥–∞',
      type: '–ü–æ–¥–∑–µ–º–µ–ª—å–µ',
      level: '15-35',
      description: '–õ–∞–±–∏—Ä–∏–Ω—Ç —Ç—ë–º–Ω—ã—Ö —Ç—É–Ω–Ω–µ–ª–µ–π –ø–æ–¥ —Å—Ç–æ–ª–∏—Ü–µ–π, –ø–æ–ª–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–æ–≤ –∏ –æ–ø–∞—Å–Ω–æ—Å—Ç–µ–π',
      features: ['–¢–∞–π–Ω—ã–µ –ø—Ä–æ—Ö–æ–¥—ã', '–õ–æ–≥–æ–≤–æ –≤–æ—Ä–æ–≤', '–î—Ä–µ–≤–Ω–∏–µ –∫–∞—Ç–∞–∫–æ–º–±—ã', '–°–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—ã'],
      danger: '–í—ã—Å–æ–∫–∞—è',
      population: '???'
    },
    {
      id: 4,
      name: '–î—Ä–∞–∫–æ–Ω—å—è –ü–µ—â–µ—Ä–∞',
      type: '–†–µ–π–¥',
      level: '50+',
      description: '–õ–æ–≥–æ–≤–æ –¥—Ä–µ–≤–Ω–µ–≥–æ –¥—Ä–∞–∫–æ–Ω–∞ –≤ –≤—É–ª–∫–∞–Ω–∏—á–µ—Å–∫–∏—Ö –≥–æ—Ä–∞—Ö. –î–ª—è —Å–∞–º—ã—Ö –æ—Ç–≤–∞–∂–Ω—ã—Ö –≥–µ—Ä–æ–µ–≤',
      features: ['–î—Ä–∞–∫–æ–Ω—å–µ —Å–æ–∫—Ä–æ–≤–∏—â–µ', '–õ–∞–≤–æ–≤—ã–µ –æ–∑—ë—Ä–∞', '–î—Ä–µ–≤–Ω–∏–µ —Ä—É–Ω—ã'],
      danger: '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è',
      population: '1'
    }
  ];

  const getDangerColor = (danger: string) => {
    switch (danger) {
      case '–ù–∏–∑–∫–∞—è': return 'bg-green-500';
      case '–°—Ä–µ–¥–Ω—è—è': return 'bg-yellow-500';
      case '–í—ã—Å–æ–∫–∞—è': return 'bg-orange-500';
      case '–≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è': return 'bg-red-500';
      default: return 'bg-gray-500';
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case '–ì–æ—Ä–æ–¥': return 'Building';
      case '–°–≤—è—Ç–∏–ª–∏—â–µ': return 'Castle';
      case '–ü–æ–¥–∑–µ–º–µ–ª—å–µ': return 'Mountain';
      case '–†–µ–π–¥': return 'Flame';
      default: return 'MapPin';
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-background via-background/95 to-primary/20">
      <div className="container mx-auto px-6 py-16">
        <div className="text-center mb-12">
          <h1 className="fantasy-title text-5xl font-bold text-primary mb-4">
            üåç –ú–∏—Ä –§—ç–Ω—Ç–µ–∑–∏
          </h1>
          <p className="text-xl text-foreground/70 max-w-2xl mx-auto">
            –ò—Å—Å–ª–µ–¥—É–π –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –ø–æ–ª–Ω—ã–µ —Ç–∞–π–Ω, —Å–æ–∫—Ä–æ–≤–∏—â –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-8 mb-16">
          {locations.map((location) => (
            <Card key={location.id} className="group relative overflow-hidden bg-card/80 backdrop-blur-sm border-primary/20 hover:border-primary/40 transition-all duration-300 hover:shadow-2xl hover:shadow-primary/25">
              <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300" />
              
              <CardHeader className="relative z-10">
                <div className="flex items-center justify-between mb-4">
                  <div className="flex items-center space-x-2">
                    <Icon name={getTypeIcon(location.type)} size={20} className="text-primary" />
                    <Badge variant="outline" className="border-primary/30">
                      {location.type}
                    </Badge>
                  </div>
                  <Badge className={`${getDangerColor(location.danger)} text-white`}>
                    {location.danger}
                  </Badge>
                </div>
                
                <CardTitle className="fantasy-title text-2xl text-primary mb-2">
                  {location.name}
                </CardTitle>
                
                <CardDescription className="text-foreground/70 mb-4">
                  {location.description}
                </CardDescription>
              </CardHeader>

              <CardContent className="relative z-10 space-y-6">
                {/* Info */}
                <div className="grid grid-cols-2 gap-4">
                  <div>
                    <div className="text-sm text-foreground/70 mb-1">–£—Ä–æ–≤–µ–Ω—å</div>
                    <div className="font-semibold text-primary">{location.level}</div>
                  </div>
                  <div>
                    <div className="text-sm text-foreground/70 mb-1">–ù–∞—Å–µ–ª–µ–Ω–∏–µ</div>
                    <div className="font-semibold text-primary">{location.population}</div>
                  </div>
                </div>

                {/* Features */}
                <div>
                  <h4 className="font-semibold text-primary mb-3 flex items-center">
                    <Icon name="Star" size={16} className="mr-2" />
                    –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
                  </h4>
                  <div className="grid grid-cols-1 gap-2">
                    {location.features.map((feature, index) => (
                      <div key={index} className="text-sm text-foreground/80 flex items-center">
                        <Icon name="Dot" size={12} className="mr-1 text-primary" />
                        {feature}
                      </div>
                    ))}
                  </div>
                </div>

                <Button className="w-full group-hover:bg-primary group-hover:text-primary-foreground transition-all duration-300">
                  <Icon name="Navigation" size={16} className="mr-2" />
                  –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å
                </Button>
              </CardContent>
            </Card>
          ))}
        </div>

        {/* World Map */}
        <div className="text-center">
          <Card className="max-w-2xl mx-auto bg-card/80 backdrop-blur-sm border-primary/20">
            <CardHeader>
              <CardTitle className="fantasy-title text-3xl text-primary">
                üó∫Ô∏è –ö–∞—Ä—Ç–∞ –ú–∏—Ä–∞
              </CardTitle>
              <CardDescription className="text-lg">
                –û—Ç–∫—Ä–æ–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É –≤—Å–µ—Ö –ª–æ–∫–∞—Ü–∏–π
              </CardDescription>
            </CardHeader>
            <CardContent>
              <div className="h-64 bg-primary/10 rounded-lg flex items-center justify-center mb-6">
                <div className="text-center">
                  <Icon name="Map" size={48} className="text-primary mx-auto mb-4" />
                  <p className="text-foreground/70">–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä—Ç–∞ –º–∏—Ä–∞</p>
                </div>
              </div>
              <Button size="lg" className="w-full">
                <Icon name="Map" size={20} className="mr-2" />
                –û—Ç–∫—Ä—ã—Ç—å –ö–∞—Ä—Ç—É
              </Button>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
};

export default World;